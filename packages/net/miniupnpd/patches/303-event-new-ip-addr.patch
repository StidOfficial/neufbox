diff -pruN miniupnpd-1.3/getifaddr.c miniupnpd-1.3-new/getifaddr.c
--- miniupnpd-1.3/getifaddr.c	2008-10-15 12:16:28.000000000 +0200
+++ miniupnpd-1.3-new/getifaddr.c	2009-06-10 16:12:50.114064611 +0200
@@ -21,37 +21,58 @@
 #include "getifaddr.h"
 
 int
-getifaddr(const char * ifname, char * buf, int len)
+getifaddr_in(const char *ifname, struct in_addr *addr)
 {
-	/* SIOCGIFADDR struct ifreq *  */
+        /* SIOCGIFADDR struct ifreq *  */
 	int s;
 	struct ifreq ifr;
 	int ifrlen;
-	struct sockaddr_in * addr;
-	ifrlen = sizeof(ifr);
+
 	if(!ifname || ifname[0]=='\0')
 		return -1;
+        
 	s = socket(PF_INET, SOCK_DGRAM, 0);
 	if(s < 0)
 	{
 		syslog(LOG_ERR, "socket(PF_INET, SOCK_DGRAM): %m");
 		return -1;
 	}
-	strncpy(ifr.ifr_name, ifname, IFNAMSIZ);
+        
+        memset(&ifr, 0, sizeof(ifr));
+        ifr.ifr_addr.sa_family = AF_INET; /* IPv4 IP address */
+	strncpy(ifr.ifr_name, ifname, IFNAMSIZ-1);
+	ifrlen = sizeof(ifr);
+
 	if(ioctl(s, SIOCGIFADDR, &ifr, &ifrlen) < 0)
 	{
-		syslog(LOG_ERR, "ioctl(s, SIOCGIFADDR, ...): %m");
+		syslog(LOG_DEBUG, "ioctl(s, SIOCGIFADDR, ...): %m");
 		close(s);
 		return -1;
 	}
-	addr = (struct sockaddr_in *)&ifr.ifr_addr;
-	if(!inet_ntop(AF_INET, &addr->sin_addr, buf, len))
+        
+	*addr = ((struct sockaddr_in *)&ifr.ifr_addr)->sin_addr;
+
+	close(s);
+
+	return 0;
+}
+
+int
+getifaddr(const char * ifname, char * buf, int len)
+{
+        struct in_addr addr;
+        
+	if(getifaddr_in(ifname, &addr) != 0)
+        {
+                return -1;
+        }
+
+	if(!inet_ntop(AF_INET, &addr, buf, len))
 	{
 		syslog(LOG_ERR, "inet_ntop(): %m");
-		close(s);
 		return -1;
 	}
-	close(s);
+	
 	return 0;
 }
 
diff -pruN miniupnpd-1.3/getifaddr.h miniupnpd-1.3-new/getifaddr.h
--- miniupnpd-1.3/getifaddr.h	2007-02-07 23:38:32.000000000 +0100
+++ miniupnpd-1.3-new/getifaddr.h	2009-06-10 16:12:50.114064611 +0200
@@ -8,6 +8,13 @@
 #ifndef __GETIFADDR_H__
 #define __GETIFADDR_H__
 
+/* getifsinaddr()
+ * take a network interface name and write the
+ * struct in_addr *addr
+ * returns: 0 success, -1 failure */
+int
+getifaddr_in(const char * ifname, struct in_addr *addr);
+
 /* getifaddr()
  * take a network interface name and write the
  * ip v4 address as text in the buffer
diff -pruN miniupnpd-1.3/miniupnpd.c miniupnpd-1.3-new/miniupnpd.c
--- miniupnpd-1.3/miniupnpd.c	2009-02-14 12:24:56.000000000 +0100
+++ miniupnpd-1.3-new/miniupnpd.c	2009-06-10 16:12:50.314064613 +0200
@@ -14,6 +14,7 @@
 #include <sys/socket.h>
 #include <netinet/in.h>
 #include <arpa/inet.h>
+#include <net/if.h>
 #include <fcntl.h>
 #include <sys/file.h>
 #include <syslog.h>
@@ -766,6 +767,15 @@ init(int argc, char * * argv, struct run
 	reload_from_lease_file();
 #endif
 
+#ifdef ENABLE_EVENTS
+        /* get the current wan iface ip address */
+        if(getifaddr_in(ext_if_name, &wan_if_addr) != 0)
+        {
+                syslog(LOG_NOTICE, "Failed to get wan ip addr.");
+                /* continue .. */
+        }
+#endif
+
 	return 0;
 }
 
@@ -800,6 +810,8 @@ main(int argc, char * * argv)
 	struct rule_state * rule_list = 0;
 	struct timeval checktime = {0, 0};
 
+        struct in_addr current_if_addr;
+
 	if(init(argc, argv, &v) != 0)
 		return 1;
 
@@ -1079,6 +1091,19 @@ main(int argc, char * * argv)
 #endif
 #ifdef ENABLE_EVENTS
 		upnpevents_processfds(&readset, &writeset);
+                
+                /* lookup if wan ip addr has changed */
+                if(getifaddr_in(ext_if_name, &current_if_addr) == 0)
+                {
+                        if(wan_if_addr.s_addr != current_if_addr.s_addr)
+                        {
+                                /* event ! */
+                                upnp_event_var_change_notify(EWanIPC);
+                                
+                                /* up */
+                                wan_if_addr.s_addr = current_if_addr.s_addr;
+                        }
+                }
 #endif
 #ifdef ENABLE_NATPMP
 		/* process NAT-PMP packets */
diff -pruN miniupnpd-1.3/upnpglobalvars.c miniupnpd-1.3-new/upnpglobalvars.c
--- miniupnpd-1.3/upnpglobalvars.c	2008-10-06 15:22:02.000000000 +0200
+++ miniupnpd-1.3-new/upnpglobalvars.c	2009-06-10 16:12:50.314064613 +0200
@@ -13,6 +13,7 @@
 
 /* network interface for internet */
 const char * ext_if_name = 0;
+struct in_addr wan_if_addr = { .s_addr = 0, };
 
 /* file to store leases */
 #ifdef ENABLE_LEASEFILE
diff -pruN miniupnpd-1.3/upnpglobalvars.h miniupnpd-1.3-new/upnpglobalvars.h
--- miniupnpd-1.3/upnpglobalvars.h	2008-10-06 15:22:02.000000000 +0200
+++ miniupnpd-1.3-new/upnpglobalvars.h	2009-06-10 16:12:50.318064132 +0200
@@ -15,6 +15,7 @@
 
 /* name of the network interface used to acces internet */
 extern const char * ext_if_name;
+extern struct in_addr wan_if_addr;
 
 /* file to store all leases */
 #ifdef ENABLE_LEASEFILE
