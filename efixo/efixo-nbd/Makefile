#
# Copyright (C) 2006-2008 OpenWrt.org
#
# This is free software, licensed under the GNU General Public License v2.
# See /LICENSE for more information.
#
# $Id: Makefile 21504 2011-09-12 15:07:43Z mgo $

include $(TOPDIR)/rules.mk

PKG_NAME:=efixo-nbd
PKG_RELEASE:=1
PKG_INSTALL:=1

include $(INCLUDE_DIR)/package-bin-ipkg.mk
include $(INCLUDE_DIR)/kernel.mk

# Add dependencies from config net infra
PKG_CONFIG_DEPENDS+=CONFIG_neufbox_net_infra_adsl
PKG_CONFIG_DEPENDS+=CONFIG_neufbox_net_infra_ftth
PKG_CONFIG_DEPENDS+=CONFIG_neufbox_net_infra_gprs
PKG_CONFIG_DEPENDS+=CONFIG_neufbox_net_infra_bridge

PKG_BUILD_DEPENDS+= PACKAGE_efixo-bcm53xx:efixo-bcm53xx

ifeq ($(DUMP),)
  STAMP_CONFIGURED:=$(strip $(STAMP_CONFIGURED))_$(shell grep '^CONFIG_efixo-nbd-' $(TOPDIR)/.config | md5s)
endif

define Package/efixo-nbd
  SECTION:=efixo
  CATEGORY:=Efixo applications
  TITLE:=Neufbox configuration daemon
  MAINTAINER:=Miguel GAIO
  DEPENDS:=+libgcc +librt \
	  +libinklevel +libtropicssl +libezxml +libpcre +libuuid +zlib +libiptc \
	  +efixo-libecom +efixo-libetk +efixo-libbackup \
	  +!TARGET_x86:kmod-efixo-voice-subsys \
	  +TARGET_octeon:kmod-efixo-voice-subsys \
	  +TARGET_octeon_nb5_main:kmod-atheros-wireless \
	  +TARGET_octeon:cavium-libcvmx \
	  +TARGET_octeon:kmod-d2tech-driver \
	  +TARGET_brcm63xx:kmod-broadcom-wireless \
	  +TARGET_brcm63xx_nb6_main:realtek-rtl8370
endef

define Package/efixo-nbd/description
 This package contains an utility for neufbox configuration
endef

define Package/efixo-nbd/config
	menu "Configuration"
		depends on PACKAGE_efixo-nbd
		source "$(SOURCE)/Config.in"
	endmenu
endef

MAKE_VARS+=KERNEL_DIR=$(LINUX_DIR)
MAKE_VARS+=OCTEON_MODEL=OCTEON_CN50XX
MAKE_VARS+=CONFIG_VERSION=$(CONFIG_CONFIG_VERSION)
MAKE_VARS+=CONFIG_CLI_STRING=$(CONFIG_VSSTEST_CLI_STRING)
MAKE_VARS+=$(if $(CONFIG_PACKAGE_ebtables), HAVE_EBTABLES=1)
MAKE_VARS+=$(if $(CONFIG_neufbox_net_infra_bridge), HAVE_BRIDGE_NET_INFRA=1)

define NetInfra/Config
echo "#define has_net_infra_$(1)() $(if $(CONFIG_neufbox_net_infra_$(1)),1,0)" >> $(2)
endef
define Update/Config
	echo "/*" > $(1)
	echo " * Autogenerated. Do NOT edit!" >> $(1)
	echo " */" >> $(1)
	echo "" >> $(1)
	echo "#ifndef _NBD_CONFIG_H_" >> $(1)
	echo "#define _NBD_CONFIG_H_ 1" >> $(1)
	$(call NetInfra/Config,adsl,$(1))
	$(call NetInfra/Config,ftth,$(1))
	$(call NetInfra/Config,gprs,$(1))
	$(call NetInfra/Config,bridge,$(1))
	echo "#endif" >> $(1)
endef
define Build/Prepare
	$(CP) $(LINUX_DIR)/include/neufbox/ $(STAGING_DIR)/usr/include/
	$(CP) src/* $(PKG_BUILD_DIR)
	$(call Update/Config,$(PKG_BUILD_DIR)/server/include/config.h)
	$(call Update/Config,$(PKG_BUILD_DIR)/lib/include/nbd/config.h)
	$(SED) 's,$$$$OPERATOR_DOMAIN,$(call qstrip,$(CONFIG_OPERATOR_DOMAIN)),g' $(PKG_BUILD_DIR)/server/plugins/xml/system.xml.gpp
	$(SED) 's,$$$$SSID_PREFIX,$(call qstrip,$(CONFIG_SSID_PREFIX)),g' $(PKG_BUILD_DIR)/server/plugins/xml/system.xml.gpp
	$(SED) 's,$$$$SAMBA,$(call qstrip,$(CONFIG_SAMBA_SERVICE_NAME)),g' $(PKG_BUILD_DIR)/server/plugins/xml/user.xml.gpp
	$(SED) 's,$$$$UPNPAV,$(call qstrip,$(CONFIG_UPNPAV_SERVICE_NAME)),g' $(PKG_BUILD_DIR)/server/plugins/xml/user.xml.gpp
	$(call Build/Prepare/Default)
endef

plugins-$(CONFIG_efixo-nbd-plugin-event) += event
plugins-$(CONFIG_efixo-nbd-plugin-status) += status
plugins-$(CONFIG_efixo-nbd-plugin-nvram) += nvram
plugins-$(CONFIG_efixo-nbd-plugin-leds) += leds
plugins-$(CONFIG_efixo-nbd-plugin-nbctl) += nbctl
plugins-$(CONFIG_efixo-nbd-plugin-autoconf) += autoconf
plugins-$(CONFIG_efixo-nbd-plugin-spy) += spy
plugins-$(CONFIG_efixo-nbd-plugin-firewall) += firewall
plugins-$(CONFIG_efixo-nbd-plugin-nat) += nat
plugins-$(CONFIG_efixo-nbd-plugin-uroute) += uroute
plugins-$(CONFIG_efixo-nbd-plugin-uping) += uping
plugins-$(CONFIG_efixo-nbd-plugin-utraceroute) += utraceroute
plugins-$(CONFIG_efixo-nbd-plugin-lan) += lan
plugins-$(CONFIG_efixo-nbd-plugin-wlan) += wlan
plugins-$(CONFIG_efixo-nbd-plugin-hotspot) += hotspot
plugins-$(CONFIG_efixo-nbd-plugin-voip) += voip
plugins-$(CONFIG_efixo-nbd-plugin-stb) += stb
plugins-$(CONFIG_efixo-nbd-plugin-igmp) += igmp
plugins-$(CONFIG_efixo-nbd-plugin-backup3g) += backup3g
plugins-$(CONFIG_efixo-nbd-plugin-plc) += plc
plugins-$(CONFIG_efixo-nbd-plugin-dsl) += dsl
plugins-$(CONFIG_efixo-nbd-plugin-sfp) += sfp
plugins-$(CONFIG_efixo-nbd-plugin-eco) += eco
plugins-$(CONFIG_efixo-nbd-plugin-vSStest) += vSStest
plugins-$(CONFIG_efixo-nbd-plugin-disk) += disk
plugins-$(CONFIG_efixo-nbd-plugin-ddnsctl) += ddnsctl
plugins-$(CONFIG_efixo-nbd-plugin-sambactl) += sambactl
plugins-$(CONFIG_efixo-nbd-plugin-usharectl) += usharectl
plugins-$(CONFIG_efixo-nbd-plugin-printer) += printer
plugins-$(CONFIG_efixo-nbd-plugin-wanctl) += wanctl

PLUGINS:=$(plugins-y)
export PLUGINS

define Package/efixo-nbd/install
	$(INSTALL_DIR) $(1)/usr/bin
	$(CP) $(PKG_INSTALL_DIR)/usr/bin/* $(1)/usr/bin
	$(INSTALL_DIR) $(1)/usr/sbin
	$(CP) $(PKG_INSTALL_DIR)/usr/sbin/* $(1)/usr/sbin
	$(INSTALL_DIR) $(1)/etc/init.d
	$(INSTALL_BIN) ./files/etc/init.d/nbd.init $(1)/etc/init.d/nbd
	$(INSTALL_DIR) $(1)/etc/autoconf/default
	$(INSTALL_DATA) ./files/etc/autoconf/default/cfgnbxgprs.xml $(1)/etc/autoconf/default
	$(INSTALL_DATA) ./files/etc/autoconf/default/general.xml $(1)/etc/autoconf/default
	$(INSTALL_DATA) ./files/etc/autoconf/default/tvservices.xml $(1)/etc/autoconf/default
	$(INSTALL_DATA) ./files/etc/autoconf/default/wanservices.xml $(1)/etc/autoconf/default
	$(INSTALL_DATA) ./files/etc/autoconf/default/$(CONFIG_HOTSPOT_AUTOCONF_FILE) $(1)/etc/autoconf/default/hotspot.xml
	$(SED) 's,$$$$OPERATOR_DOMAIN,$(call qstrip,$(CONFIG_OPERATOR_DOMAIN)),g' $(1)/etc/autoconf/default/*
	$(INSTALL_DIR) $(1)/etc/network
	-$(INSTALL_CONF) ./files/etc/network/topology-$(BOX).xml $(1)/etc/network/topology.xml
	-$(INSTALL_CONF) ./files/etc/network/topology-bridge-$(BOX).xml $(1)/etc/network/topology-bridge.xml
	$(INSTALL_DIR) $(BIN_DIR)
	$(CP) $(PKG_BUILD_DIR)/server/plugins/xml/system.xml $(BIN_DIR)/system-$(BOX).xml
	$(CP) $(PKG_BUILD_DIR)/server/plugins/hal/seed.bin $(BIN_DIR)/seed-$(BOX).bin
endef

$(eval $(call RequireCommand,xmllint, \
	Please install xmllint \
))
$(eval $(call RequireCommand,xxd, \
	Please install xxd \
))
$(eval $(call RequireCommand,gpp, \
	Please install gpp \
))

$(eval $(call BuildPackage,efixo-nbd))
