--- a/net/ipv4/af_inet.c
+++ b/net/ipv4/af_inet.c
@@ -736,6 +736,10 @@ int inet_shutdown(struct socket *sock, i
 	return err;
 }
 
+#if defined(CONFIG_MIPS_BRCM)
+#define SIOCGEXTIF	0x8908
+#endif
+
 /*
  *	ioctl() calls you can issue on an INET socket. Most of these are
  *	device configuration and stuff and very rarely used. Some ioctls
@@ -763,8 +767,14 @@ int inet_ioctl(struct socket *sock, unsi
 		case SIOCDARP:
 		case SIOCGARP:
 		case SIOCSARP:
+		case SIOCSDMZ: // Keven -- super DMZ
 			err = arp_ioctl(cmd, (void __user *)arg);
 			break;
+#if defined(CONFIG_MIPS_BRCM)
+		case SIOCGEXTIF:
+			err = sock_get_extif(sk, (char __user *)arg);
+			break;
+#endif
 		case SIOCGIFADDR:
 		case SIOCSIFADDR:
 		case SIOCGIFBRDADDR:
--- a/include/net/sock.h
+++ b/include/net/sock.h
@@ -252,6 +252,9 @@ struct sock {
 	__u32			sk_sndmsg_off;
 	int			sk_write_pending;
 	void			*sk_security;
+#if defined(CONFIG_MIPS_BRCM)
+	char			extdev[64];
+#endif
 	void			(*sk_state_change)(struct sock *sk);
 	void			(*sk_data_ready)(struct sock *sk, int bytes);
 	void			(*sk_write_space)(struct sock *sk);
--- a/net/core/sock.c
+++ b/net/core/sock.c
@@ -1635,6 +1635,15 @@ int sock_common_recvmsg(struct kiocb *io
 
 EXPORT_SYMBOL(sock_common_recvmsg);
 
+#if defined(CONFIG_MIPS_BRCM)
+int sock_get_extif(struct sock *sk, char __user *extif)
+{
+    return copy_to_user(extif, sk->extdev, sizeof(sk->extdev)) ? -EFAULT: 0;
+}
+
+EXPORT_SYMBOL(sock_get_extif);
+#endif
+
 /*
  *	Set socket options on an inet socket.
  */
--- a/net/ipv4/raw.c
+++ b/net/ipv4/raw.c
@@ -598,6 +598,11 @@ static int raw_recvmsg(struct kiocb *ioc
 	if (!skb)
 		goto out;
 
+#if defined(CONFIG_MIPS_BRCM)
+        if(skb->extif)
+		sprintf(sk->extdev, "%s ", skb->extif);
+#endif
+
 	copied = skb->len;
 	if (len < copied) {
 		msg->msg_flags |= MSG_TRUNC;
