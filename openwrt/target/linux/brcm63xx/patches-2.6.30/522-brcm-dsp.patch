--- a/arch/mips/kernel/genex.S
+++ b/arch/mips/kernel/genex.S
@@ -52,6 +52,17 @@ NESTED(except_vec1_generic, 0, sp)
 NESTED(except_vec3_generic, 0, sp)
 	.set	push
 	.set	noat
+
+#ifdef CONFIG_BCM63XX_DSP
+	/* if we are running on DSP TP branch to brcm_dsp_except */
+	nop
+	mfc0	k0, $22, 3
+	srl	k0, k0, 31
+	la	k1, main_tp_num
+	lw	k1, 0(k1)
+	bne	k0, k1, brcm_dsp_except
+#endif
+
 #if R5432_CP0_INTERRUPT_WAR
 	mfc0	k0, CP0_INDEX
 #endif
@@ -62,6 +73,14 @@ NESTED(except_vec3_generic, 0, sp)
 #endif
 	PTR_L	k0, exception_handlers(k1)
 	jr	k0
+
+#ifdef CONFIG_BCM63XX_DSP
+brcm_dsp_except:
+	PTR_LA	ra, ret_from_exception 
+	PTR_LA	k0, 0xa0000200
+	jr	k0 
+#endif
+
 	.set	pop
 	END(except_vec3_generic)
 
--- a/init/main.c
+++ b/init/main.c
@@ -108,6 +108,10 @@ EXPORT_SYMBOL(system_state);
 #define MAX_INIT_ARGS CONFIG_INIT_ENV_ARG_LIMIT
 #define MAX_INIT_ENVS CONFIG_INIT_ENV_ARG_LIMIT
 
+#ifdef CONFIG_BCM63XX
+extern void __init allocDspModBuffers(void);
+#endif
+
 extern void time_init(void);
 /* Default late time init is NULL. archs can override this later. */
 void (*__initdata late_time_init)(void);
@@ -648,6 +652,15 @@ asmlinkage void __init start_kernel(void
 	vmalloc_init();
 	vfs_caches_init_early();
 	cpuset_init_early();
+
+#ifdef CONFIG_BCM63XX_DSP
+	/*
+	** Allocate boot time memory for the special DSP module. This allocation can be 
+	** possible only before mem_init(). Please ensure that this allocation is performed 
+	** before mem_init().
+	*/
+	allocDspModBuffers();
+#endif 
 	page_cgroup_init();
 	mem_init();
 	enable_debug_pagealloc();
--- a/arch/mips/bcm63xx/prom.c
+++ b/arch/mips/bcm63xx/prom.c
@@ -17,6 +17,10 @@
 #include <bcm63xx_regs.h>
 #include <bcm63xx_gpio.h>
 
+#ifdef CONFIG_BCM63XX_DSP
+unsigned int main_tp_num;
+#endif
+
 void __init prom_init(void)
 {
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,30)
@@ -61,6 +65,13 @@ void __init prom_init(void)
 	/* register gpiochip */
 	bcm63xx_gpio_init();
 
+#ifdef CONFIG_BCM63XX_DSP
+	if (BCMCPU_IS_6362()) {
+		main_tp_num = ((read_c0_diag3() & CP0_CMT_TPID) == CP0_CMT_TPID) ? 1 : 0;
+		printk("Linux TP ID = %u \n", (unsigned int)main_tp_num);
+	}
+#endif
+
 	/* do low level board init */
 	board_prom_init();
 }
