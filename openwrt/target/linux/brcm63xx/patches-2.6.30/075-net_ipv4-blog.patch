--- a/net/ipv4/ip_input.c
+++ b/net/ipv4/ip_input.c
@@ -143,6 +143,9 @@
 #include <net/xfrm.h>
 #include <linux/mroute.h>
 #include <linux/netlink.h>
+#if defined (CONFIG_BLOG)
+#include <linux/blog.h>
+#endif
 
 /*
  *	Process Router Attention IP option
@@ -256,6 +259,12 @@ static int ip_local_deliver_finish(struc
  */
 int ip_local_deliver(struct sk_buff *skb)
 {
+
+/* do not track locally delivered packets */
+#if defined (CONFIG_BLOG)
+	blog_skip(skb);
+#endif
+
 	/*
 	 *	Reassemble IP fragments.
 	 */
--- a/net/ipv4/ip_output.c
+++ b/net/ipv4/ip_output.c
@@ -80,6 +80,10 @@
 #include <linux/netlink.h>
 #include <linux/tcp.h>
 
+#if defined(CONFIG_BLOG)
+#include <linux/blog.h>
+#endif
+
 int sysctl_ip_default_ttl __read_mostly = IPDEFTTL;
 
 /* Generate a checksum for an outgoing IP datagram. */
@@ -222,6 +226,15 @@ static inline int ip_skb_dst_mtu(struct
 
 static int ip_finish_output(struct sk_buff *skb)
 {
+#if defined(CONFIG_BLOG)
+	uint32_t mtu;
+
+	mtu = dst_mtu(skb->dst);
+	if (skb->blog_p && skb->blog_p->minMtu > mtu)
+		skb->blog_p->minMtu = mtu;
+
+#endif
+
 #if defined(CONFIG_NETFILTER) && defined(CONFIG_XFRM)
 	/* Policy lookup after SNAT yielded a new policy */
 	if (skb->dst->xfrm != NULL) {
