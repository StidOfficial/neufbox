--- a/miscutils/watchdog.c
+++ b/miscutils/watchdog.c
@@ -12,6 +12,7 @@
 #include "libbb.h"
 #include "linux/types.h" /* for __u32 */
 #include "linux/watchdog.h"
+#include <sched.h>
 
 #define OPT_FOREGROUND  (1 << 0)
 #define OPT_STIMER      (1 << 1)
@@ -41,6 +42,9 @@ int watchdog_main(int argc, char **argv)
 	unsigned htimer_duration = 60000; /* reboots after N ms if not restarted */
 	char *st_arg;
 	char *ht_arg;
+	struct sched_param param = {
+		.sched_priority = 5,
+	};
 
 	opt_complementary = "=1"; /* must have exactly 1 argument */
 	opts = getopt32(argv, "Ft:T:", &st_arg, &ht_arg);
@@ -85,6 +89,8 @@ int watchdog_main(int argc, char **argv)
 		stimer_duration, htimer_duration * 1000);
 #endif
 
+	sched_setscheduler(0, SCHED_RR, &param);
+
 	while (1) {
 		/*
 		 * Make sure we clear the counter before sleeping,
